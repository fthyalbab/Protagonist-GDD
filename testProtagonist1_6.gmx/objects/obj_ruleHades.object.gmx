<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Vortex</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Narrator</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup Code
/// - Savvy
//Unique variables (change with each child):
//currentSprite = ""; //
numMessages = 6; //Number of possible dialouge choices (including the 0th index)
talkSprite = spr_defaultSpeak; //Talk sprite to be used for the text
talkImage = 0; //current frame of the talk sprite above, used in draw
deFont = fnt_hades; //used font
textColor = c_white; 
textBoxColor = c_black;
random_set_seed(5);
alarm[0] = 100;
//write your messages in an array, starting at 0, like so
message[0] = "come on now hurry up I don't have all day here.";
message[1] = "welcome back.";
message[2] = "you don't need to see the instructions again";
message[3] = "do you really need me here to tell you all of this";  
message[4] = "now you're just wasting both of our time";
message[5] = "i'm not even getting paid for this";  
//not complete

//Controls for other methods:
intDelay = 0; //Delays the start of the text
timeSpeak = 0; //Keeps track of what frame the talk sprite is on
timeSpeakMax = 7; //How many steps before the talk sprite frame changes (default = 7)
talking=false;
talkingTest = true;
axisHit = false; //used for checking near collisions
hit = false; //used for checking near collisions
timer = 0; //Used for delaying between 'f' interactions
countdown = false; //Used for delaying between 'f' interactions
upbox = false; //always draws the textbox in the upper area
downbox = false; //always draws the textbox in the lower area
message_current = 0; //0 is the first number in our array, and the message we are currently at
message_end = numMessages-1; //the last number in our array
message_draw = ""; //this is what we 'write' out. It's blank right now
increase = 0.5; //the speed at which new characters are added
characters = 0; //how many characters have already been drawn
hold = 0; //if we hold 'Z', the text will render faster
finishedString = "";
//boxX=random_range(0, room_width-string_length(message_draw)*50);
//boxY=random_range(0, room_height-100);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup New Line Divider

for (i = 0; i&lt;=message_end; i++){ //for each message...
   for (j = 0; j &lt; string_length(message[i]); j++){ //for each character...
         if (j mod 60 == 0 &amp;&amp; j != 0){ //For every 30 characters...
          finishedString += "#"; //Add a new line
        }
        finishedString += string_char_at(message[i], j+1); //Then add/ the next char as usual
        //*Debug*/show_message(finishedString);   //^^^^ INDEX STARTS AT 1 FOR THIS METHOD
        //*Debug*/show_message(j); j is climbing properly  
   }
    message[i] = finishedString; //Return the new nice string to replace the old one
    finishedString = ""; //Reset the finished string
}

message_length = string_length(message[message_current]); //get the number of characters in the first message
//*Debug*/show_message(message[0]);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set talking to true
talking = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="70">
      <action>
        <libid>1</libid>
        <id>222</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_next_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>talking</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw textbox in right spot (bottom of screen for default, top if it would block something)




//Check if protagonist or object are in the default textbox area or if upbox or downbox is on
    //This is the default location
    draw_set_colour(textBoxColor);
    draw_set_colour(textColor);
    draw_set_font(fnt_default);
   //draw the text at the coordinates
    draw_text(room_width/2-string_length(message_draw)*4, room_height-100, message_draw);
  
  if (timeSpeak == timeSpeakMax){
   talkImage++; //changes the talk sprite frame
   timeSpeak = 0;
   }
 timeSpeak++; //adds one to the animation timer

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///To Do

///Randomized location random boxes?
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
