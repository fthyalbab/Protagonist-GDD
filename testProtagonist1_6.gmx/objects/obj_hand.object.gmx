<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_extendoHand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// use createHand(xscale, minAngle, maxAngle, maxHeight)
image_speed = 0;
// default settings, not actually used
image_xscale = 1;
minAngle = 0;
maxAngle = 45;
maxHeight = 40;
// exponentially decay towards target, spd is decay factor
spd = 0.3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw the hand
// turn to face the mouse
var angle = point_direction(x, y, clamp(cursor_get_x(), 0, getDisplayRoomWidth()),
clamp(cursor_get_y(), 0, getDisplayRoomHeight())) + ((1 - sign(image_xscale)) * 90);
// clamp angle between min and max angle
var diff = abs(maxAngle - minAngle);
var diffmin = abs(angle_difference(angle, minAngle));
var diffmax = abs(angle_difference(angle, maxAngle));
if (diffmin &gt; diff || diffmax &gt; diff || diffmin + diffmax &gt;= 180)
{
    if (diffmin &lt; diffmax)
    {
        angle = minAngle;
    }
    else
    {
        angle = maxAngle;
    }
}
// height to raise hand by
var height = clamp(map_range(cursor_get_y(), getDisplayRoomHeight(), 0, 0, maxHeight), 0, maxHeight);

// exponentially decay current angle towards target angle
var target = angle - (sign(image_xscale) * 45);
var diff = angle_difference(image_angle, target);
image_angle -= spd * diff;

// draw
draw_sprite_offset_ext(sprite_index, image_index, x, y,
sprite_get_xoffset(sprite_index), sprite_get_yoffset(sprite_index) + height,
image_xscale, image_yscale, image_angle, image_blend, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
