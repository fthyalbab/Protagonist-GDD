<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init image saver
images = ds_list_create();
width = 100;
height = 100;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///save all images in queue
// do nothing if empty
if (ds_list_empty(images))
{
    exit;
}

var surf = surface_create(getDisplayRoomWidth(), getDisplayRoomHeight());
surface_copy_part(surf, 0, 0, application_surface, GUIToRoomX(0), GUIToRoomY(0), GUIToRoomX(display_get_gui_width()), GUIToRoomY(display_get_gui_height()));
// draw onto the surface to save, s
var s = surface_create(width, height);
surface_set_target(s);
var small = min(surface_get_width(surf), surface_get_height(surf));
// draw to surface a downsized version of the screen
var left = (surface_get_width(surf) * 0.5) - (small * 0.5);
var top = (surface_get_height(surf) * 0.5) - (small * 0.5);
draw_surface_part_ext(surf, left, top, small, small, 0, 0, width / small, height / small, c_white, 1);
surface_reset_target();
// save the surfaces to file
for (var i = 0; i &lt; ds_list_size(images); i++)
{
    // save the thumbnail
    surface_save(s, getSavePath(images[| i], getSaveImageFilename()));
    // reset the savemenu thumbnail spritetable entry
    clearSaveSpritetableEntry(images[| i]);
}
// clear list
ds_list_clear(images);
// destroy surfaces
surface_free(surf);
surface_free(s);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
