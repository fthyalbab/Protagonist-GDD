<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// init the three sounds from constructor
intro = noone;
loop = noone;
outro = noone;

state = CLOSED;

introSnd = noone;
loopSnd = noone;
outroSnd = noone;

playLoop = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// handle state
switch (state)
{
    case CLOSED:
        // play intro
        introSnd = noone;
        if (sound_exists(intro))
        {
            introSnd = audio_play_sound(intro, 1, false);
        }
        state = OPENING;
        break;
    case OPENING:
        // if intro stops, play loop
        if (!audio_is_playing(introSnd) || introSnd == noone)
        {
            loopSnd = noone;
            if (sound_exists(loop))
            {
                loopSnd = audio_play_sound(loop, 1, playLoop);
            }
            introSnd = noone;
            state = OPEN;
        }
        break;
    case OPEN:
        // keep looping until outro (state = CLOSING) 
        // if not looping, then wait until sound is over
        if (!playLoop &amp;&amp; (!audio_is_playing(loopSnd) || loopSnd == noone))
        {
            state = CLOSING;
        }
        break;
    case CLOSING:
        // if playing the intro
        if (audio_is_playing(introSnd) &amp;&amp; introSnd != noone)
        {
            // stop intro sound
            audio_stop_sound(introSnd);
        }
        // if playing the looping sound
        if ((audio_is_playing(loopSnd) || loopSnd == noone) &amp;&amp; outroSnd == noone)
        {
            // stop looping sound
            if (loopSnd != noone)
            {
                audio_stop_sound(loopSnd);
            }
            loopSnd = noone;
            // play outro
            if (sound_exists(outro))
            {
                outroSnd = audio_play_sound(outro, 1, false);
            }
            else
            {
                instance_destroy();
            }
        }
        // if outro is done
        if (!audio_is_playing(outroSnd) || outroSnd == noone)
        {
            // done, destroy self
            instance_destroy();
        }
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
