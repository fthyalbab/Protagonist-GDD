<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ratSpell</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>obj_spellEffect</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_ratSpell</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// the rat appears and then spins around a bit
moving = false;
moveDur = 100;
fadeDur = 10;
timer = 0;
image_speed = 0;

r = 200;

x = getDisplayRoomWidth() * 0.5;
y = getDisplayRoomHeight() * 0.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// handle state
if (!moving)
{
    // fade in
    if (image_speed == 0)
    {
        timer++;
        image_alpha = map_range(timer, 0, fadeDur, 0, 1);
        if (timer &gt;= fadeDur)
        {
            image_speed = 0.3;
            timer = 0;
        }
    }
}
// if moving about
else
{
    var adj = 5 * (timer - 90);
    x = getDisplayRoomWidth() * 0.5 + lengthdir_x(r, adj);
    y = getDisplayRoomHeight() * 0.5 + lengthdir_y(r, 2 * adj) / 2;
    timer++;
    if (timer &gt;= moveDur)
    {
        instance_destroy();
        exit;
    }
    else if (timer &gt;= moveDur - fadeDur)
    {
        image_alpha = map_range(timer, moveDur - fadeDur, moveDur, 1, 0);
    }
}

// if rat is shown
if (image_index &gt;= 8)
{
    // reset cat attacks
    with (obj_sphinxAttackLetter)
    {
        attackTimer = -70;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// start rotating around, loop back to image 8
moving = true;
image_index = 8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
