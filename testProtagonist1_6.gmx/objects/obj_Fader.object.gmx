<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Wall</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Necessary Variables
countFade = 0;
slideFade = 0;
fadeIn = false;
fadeOut = false;
explode = false;
implode = false;
particleFlare = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Particle Flare code
if(particleFlare == true){
    if (mouse_check_button(mb_left) = true){
    effect_create_above(ef_spark, mouse_x + random(sprite_width), mouse_y + random(sprite_height), choose(0, 0.1, 0.3), merge_colour(c_white, c_blue, random(1)));
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Slide Fade code
if(slideFade == true &amp;&amp; countFade &lt; room_width+room_width/2){
draw_set_colour(c_black);
countFade += room_width/30;
draw_rectangle(room_width, 0, room_width-countFade, room_height, false);
}
else if(countFade=room_width+room_width/2){
    countFade = 0;
    particleFlare = false;
    slideFade = false;
    room_goto_next();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fade Out code
if(fadeOut == true &amp;&amp; countFade &lt; 1 ){
draw_set_colour(0);
countFade += 0.01;
draw_set_alpha(countFade);
draw_rectangle(0,0,room_width, room_height, false);
}
else if(countFade=1){
    if(fadeOut == true){
    fadeOut = false;
    }
    draw_set_alpha(1);
    draw_set_colour(0);
    draw_rectangle(0,0,room_width, room_height, false);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fade In code
if(fadeIn == true &amp;&amp; countFade &gt; 0 ){
draw_set_colour(0);
countFade -= 0.01;
draw_set_alpha(countFade);
draw_rectangle(0,0,room_width, room_height, false);

}
else if(countFade=0){
    if(fadeIn == true){
    fadeIn = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Explode Code
if(explode == true &amp;&amp; countFade &lt; 1 ){
draw_set_colour(c_white);
countFade += 0.05;
draw_set_alpha(countFade);
draw_rectangle(0,0,room_width, room_height, false);
}
else if(countFade=1){
    if(explode == true){
    explode = false;
    implode = true;
    }
    draw_set_alpha(1);
    draw_set_colour(c_white);
    draw_rectangle(0,0,room_width, room_height, false);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///implode code
if(implode == true &amp;&amp; countFade &gt; 0 ){
draw_set_colour(c_white);
countFade -= 0.01;
draw_set_alpha(countFade);
draw_rectangle(0,0,room_width, room_height, false);

}
else if(countFade=0){
    if(implode == true){
    implode = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
