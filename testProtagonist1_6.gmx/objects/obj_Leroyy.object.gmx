<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_syntaxFront</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_syntaxWalker</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///test case
setUp = false;
maxActive = 1; //how many tiles can be activated per puzzle
activeCount = 0; //how many tiles are currently activated
prevInst = noone; //holds the previously triggered tile
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set puzzle pieces to appropriate letters
///testCase  INCOMPLETE
if (setUp = false){
    inst_0EB54D5D.image_index = 2;
    inst_1068D131.image_index = 4;
    inst_1FD4AAEB.image_index = 11;
    inst_0EB54D5D.image_index = 12;
    inst_63D12346.image_index = 14;
    inst_9C3155E8.image_index = 22;
    setUp = true;
    magic = false;
    //22 4 11 11 2 14 12  
}


inst = collision_circle(obj_protagonist.x, obj_protagonist.y, 3, puzzlePiece, false, true);
//inst = collision_rectangle(obj_protagonist.x, obj_protagonist.x+obj_protagonist.sprite_width, obj_protagonist.y, obj_protagonist.y + obj_protagonist.sprite_height, puzzlePiece, false, false);
prev = noone;

//If you're standing on a tile ya get magic that's just how it works
if (inst=noone &amp;&amp; magic == true){
    magic = false;
}
else if(inst!=noone &amp;&amp; inst!=prev){
    magic = true;
    prev = inst;
}

if (magic == true){ //if you are on a tile
    if (inst.image_index&lt;26 &amp;&amp; activeCount&lt;maxActive){
    inst.image_index+=26;
    magic = false;
    }
    else{
    inst.image_index-=26;
    magic = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_protagonist.x =  inst_9C3155E8.x+(obj_protagonist.sprite_width)/2;
obj_protagonist.y = inst_9C3155E8.y+(obj_protagonist.sprite_height)/2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_protagonist.x =  inst_0EB54D5D.x+(obj_protagonist.sprite_width)/2;
obj_protagonist.y = inst_0EB54D5D.y+(obj_protagonist.sprite_width)/2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
