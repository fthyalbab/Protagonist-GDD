<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// init
list = noone;
surf = noone;
timer = 0;
timerDur = 30;
alpha = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// clean up
if (list != noone)
{
    ds_list_destroy(list);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// convert letters to a surface

// remove if not needed
if (!ds_exists(list, ds_type_list) || ds_list_size(list) == 0)
{
    instance_destroy();
    exit;
}

// find minimum and maximum values for surface dimensions
var xmin = 10000;
var ymin = 10000;
var xmax = -10000;
var ymax = -10000;
for (var i = 0; i &lt; ds_list_size(list); i++)
{
    var letter = list[| i];
    var xval = letter.x - (0.5 * letter.sprite_width);
    if (xval &lt; xmin)
    {
        xmin = xval;
    }
    xval += letter.sprite_width;
    if (xval &gt; xmax)
    {
        xmax = xval;
    }
    
    var yval = letter.y - (0.5 * letter.sprite_height);
    if (yval &lt; ymin)
    {
        ymin = yval;
    }
    yval += letter.sprite_height;
    if (yval &gt; ymax)
    {
        ymax = yval;
    }
}
var X = xmin;
var Y = ymin;
var W = xmax - xmin;
var H = ymax - ymin;
if (!surface_exists(surf))
{
    surf = surface_create(W, H);
}

// draw to surface
surface_set_target(surf);
draw_clear_alpha(c_black, 0);
for (var i = 0; i &lt; ds_list_size(list); i++)
{
    with (list[| i])
    {
        // draw to the surface
        draw_sprite_offset_ext(sprite_index, letterValue(value) + state, x - X, y - Y,
        sprite_get_width(sprite_index) * 0.5, sprite_get_height(sprite_index) * 0.5,
        image_xscale, image_yscale, image_angle, image_blend, image_alpha);
        // not active, since surface is the one drawing
        active = false;
    }
}
surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw the surface
timer++;
if (timer mod 2 == 0)
{
    alpha = random_range(0, 1);
}
draw_surface_ext(surf, X, Y, 1, 1, 0, c_white, alpha);

if (timer &gt; timerDur)
{
    for (var i = 0; i &lt; ds_list_size(list); i++)
    {
        var letter = list[| i];
        letter.active = true;
        with (letter)
        {
            instance_change(obj_letterFalling, true);
        }
    }
    instance_destroy();
    exit;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
