<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_banner</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// init
text = "_protagonist";
append = "_";
timer = 0;
duration = 15;
showAppend = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// blink the append underscore
timer++;
if (timer &gt; duration)
{
    timer = 0;
    showAppend = !showAppend;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw buttons
var w = 200;
var h = 64;
var posX = (getDisplayRoomWidth() * 0.5) - w;
var posY = getDisplayRoomHeight() * 0.5;
draw_set_halign(fa_center);
draw_set_valign(fa_center);

drawButtonRect(posX, posY, 2 * w, h, obj_buttons.button, c_white, c_white, 1, 1);
draw_set_color(c_white);
draw_text_outlined(posX + w, posY + (0.5 * h), "New Game");
// handle new game click
if (mouse_in_rect(posX, posY, 2 * w, h) &amp;&amp; mouse_check_button_pressed(mb_left))
{
    if (!checkRoomTransition())
    {
        playClickSound();
        obj_debugTool.debug = false;
        createRoomTransition(obj_map.map[# obj_map.X, obj_map.Y], obj_fadeTransition, false);
        if (checkFlag("launched"))
        {
            updateForestMusic();
        }
    }
}

drawButtonRect(posX, posY + 100, 2 * w, h, obj_buttons.button, c_white, c_white, 1, 1);
draw_text_outlined(posX + w, posY + 100 + (0.5 * h), "Debug Mode");
// handle debug click
if (mouse_in_rect(posX, posY + 100, 2 * w, h) &amp;&amp; mouse_check_button_pressed(mb_left))
{
    if (!checkRoomTransition())
    {
        playClickSound();
        obj_debugTool.debug = true;
        loadStoryData(createDebugSave());
        createRoomTransition(obj_map.map[# obj_map.X, obj_map.Y], obj_fadeTransition, false);
        if (checkFlag("launched"))
        {
            updateForestMusic();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw
draw_self();
var posX = x - (sprite_width * 0.3);
var posY = y;
draw_set_alpha(1);
draw_set_color(c_black);
// black highlight
draw_text_highlighted(posX, posY, text + append + " ", c_black, 1, fa_left, fa_top);
draw_set_alpha(1);
draw_set_color(c_white);
// show the underscore or not
if (showAppend)
{
    draw_text_highlighted(posX, posY, text + append, c_black, 1, fa_left, fa_top);
}
else
{
    draw_text_highlighted(posX, posY, text, c_black, 1, fa_left, fa_top);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
