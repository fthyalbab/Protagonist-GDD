<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// create the test object
// get the paused surface
surf = noone;
if (!surface_exists(surf))
{
    surf = surface_create(getDisplayRoomWidth(), getDisplayRoomHeight());
}

var combatObj = ds_list_create();
ds_list_add(combatObj, obj_spellInput, obj_hand, obj_letterFaded, obj_combatCursor);
with (obj_letter)
{
    if (spell)
    {
        instance_destroy();
    }
}

surface_copy(surf, 0, 0, application_surface);
surface_set_target(surf);
var this = id;
with (all)
{
    var found = false;
    for (var i = 0; i &lt; ds_list_size(combatObj) &amp;&amp; !found; i++)
    {
        if (instanceof(id, combatObj[| i]))
        {
            found = true;
        }
    }
    if (id != this &amp;&amp; !found)
    {
        event_perform(ev_draw, ev_gui);
    }
}
surface_reset_target();

// pause combat
instance_deactivate_all(true);
reactivateControlObjects();
for (var i = 0; i &lt; ds_list_size(combatObj) &amp;&amp; !found; i++)
{
    instance_activate_object(combatObj[| i]);
}
instance_activate_object(obj_drawer);
instance_activate_object(obj_dialogueBox);
instance_activate_object(obj_dialogueStepper);
instance_activate_object(obj_screenDimmer);
instance_activate_object(obj_masterVolumeFader);

// create it
var test = instance_create(0, 0, obj_jokeCombatTest);
test.surf = surf;

// swap the new handler to the test
test.handler = obj_combat.handler;
obj_combat.handler = test;

ds_list_destroy(combatObj);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// destroy self instantly
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
