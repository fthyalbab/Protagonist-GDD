<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_aceSpell</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_spellEffect</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// init
event_inherited();
image_speed = 0.5;
x = obj_spellInput.x + sprite_get_xoffset(sprite_index) - 55;
y = obj_spellInput.y + sprite_get_yoffset(sprite_index) - 100;

// firing
fireTimer = 0;
firing = true;

// speed when moving
acc = 0.3;
maxspd = 20;
spd = 0;
angspd = irandom_range(6, 10);
shrink = 0.03;

// delay before doing things
delay = 0;

// loop subimage
loopImage = 11;

// particle
/*
particle = PARTEFF_SEA;
particleRadius = 100;
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// if we're in fish mode, throw and rotate
// rotate the fish ball
if (image_index &gt;= loopImage)
{
    // rotate
    image_angle += angspd;
    image_speed = 0.2;
    // emit bubbles
   /* if (ds_map_exists(obj_particles.effects, particle))
    {
        createParticleEffect(PARTSYS_PUZ, particle,
        x - (particleRadius * image_xscale), y - (particleRadius * image_yscale),
        x + (particleRadius * image_xscale), y + (particleRadius * image_yscale), ps_shape_ellipse, ps_distr_linear, 1);
    }
    */
}
// throw animation
if (firing &amp;&amp; image_index &gt;= loopImage)
{
    fireTimer++;
    if (fireTimer &gt;= delay)
    {
        // accelerate
        spd += (maxspd - spd) * acc;
        var dir = point_direction(x, y, targetX, targetY);
        var dist = point_distance(x, y, targetX, targetY);
        if (dist &lt;= spd)
        {
            x = targetX;
            y = targetY;
            // deal damage and the like, since target hit
            firing = false;
            event_user(0);
        }
        // move
        x += lengthdir_x(spd, dir);
        y += lengthdir_y(spd, dir);
        // shrink
        image_xscale += -shrink * sign(image_xscale) * abs(image_xscale);
        image_yscale += -shrink * sign(image_yscale) * abs(image_yscale);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// explode
repeat(10)
{
    var r = irandom_range(0, 50);
    var ang = irandom_range(0, 360);
    effect_create_above(ef_explosion, x + lengthdir_x(r, ang), y + lengthdir_y(r, ang), 3, make_color_rgb(73, 132, 123));
}

combatEndCast(targetX, targetY, action);
combatLastCast(targetX, targetY, action);

if (5 == irandom_range(1, 32)){
combatDamage(targetX, targetY, 200);
}
else{
combatDamage(targetX, targetY, 1);
}

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// whenever we finish, go back to subimage that loops
image_index = loopImage;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw GUI does the work
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
