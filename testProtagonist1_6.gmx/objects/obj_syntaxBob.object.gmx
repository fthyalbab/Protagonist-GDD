<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_syntaxBob</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-39</depth>
  <persistent>0</persistent>
  <parentName>obj_interactable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// init
event_inherited();
image_speed = 0.3;
// puzzle handler object
// set this in creation code
handler = noone;

// whether or not this should appear
activeTracker = "";

/// music
intro = snd_syntaxIntro1;
loop = snd_syntaxLoop1;
outro = snd_syntaxOutro1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// destroy self if not needed
event_inherited();
// if puzzle fully gone, then destroy self
if (checkFlag(activeTracker) == PUZZLE_COMPLETE)
{
    event_user(4);
}
// if puzzle was just solved and has yet to play
// the cat destruction graphic, play it
if (checkFlag(activeTracker) == PUZZLE_SOLVED)
{
    // when the screen transition stops, explode it
    if (!checkRoomTransition())
    {
        event_user(3);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// what to do if already completed
instance_create(getX(id) + sprite_width * 0.35, getY(id) + sprite_height * 0.5, obj_syntaxCrater);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// what to do if just completed
repeat(3)
{
    effect_create_above(ef_explosion, getX(id) + sprite_width * 0.5, getY(id) + sprite_height * 0.5, 1, c_black);
}

setFlag(activeTracker, PUZZLE_COMPLETE);
playSound(SFX, snd_meow);
playSound(SFX, snd_explosion);
instance_create(getX(id) + sprite_width * 0.35, getY(id) + sprite_height * 0.5, obj_syntaxCrater);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// check if close, if so, display text
// dialogue must not be already open
if (instance_exists(obj_dialogue.display) &amp;&amp; obj_dialogue.display.state == CLOSED)
{
    if (instance_exists(obj_protagonist) &amp;&amp; playerCanMove() &amp;&amp; distance_to_object(obj_protagonist) &lt; 20)
    {
        /// enter combat (AKA puzzle)
        if (checkFlag(activeTracker))
        {
            exit;
        }
        
        if (!checkCombatActive())
        {
            //playSound(MUSIC, snd_taut, true);
            startCombatAnimation(handler);
            // start new music
            obj_combat.music = createTriSoundLoop(intro, loop, outro);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>24,32</point>
    <point>40,32</point>
    <point>40,56</point>
    <point>24,56</point>
  </PhysicsShapePoints>
</object>
