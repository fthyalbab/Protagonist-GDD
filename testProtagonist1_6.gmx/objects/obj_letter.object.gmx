<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Spells</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// init

// character value
value = '';
state = SPELLIMAGE_OBSCURED;

// image update
timer = 0;
normalSpd = 1;
normalMin = 5;
normalMax = 15;
normalDur = 15;
normalTarget = SPELLIMAGE_OBSCURED;

greekSpd = 1;
greekMin = 1;
greekMax = 140;
greekDur = irandom_range(greekMin, greekMax);
greekTarget = SPELLIMAGE_OBSCURED;

obscureSpd = 1;
obscureDur = 3;
obscureTarget = SPELLIMAGE_GREEK;
obscureTargetFlash = SPELLIMAGE_NORMAL;

// flash in
flash = true;

// draw or not
active = true;

// active spell or not
spell = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// update animation
switch (state)
{
    case SPELLIMAGE_NORMAL:
        // end flash
        flash = false;
        // don't leave normal if firing
        if (timer &gt; normalDur)
        {
            timer = 0;
            normalDur = irandom_range(normalMin, normalMax);
            state = normalTarget;
            break;
        }
        timer += normalSpd;
        break;
        
    case SPELLIMAGE_GREEK:
        if (timer &gt; greekDur)
        {
            timer = 0;
            greekDur = irandom_range(greekMin, greekMax);
            // finished greek section, start flash
            flash = true;
            state = greekTarget;
            break;
        }
        timer += greekSpd;
        break;
        
    case SPELLIMAGE_OBSCURED:
        if (timer &gt; obscureDur)
        {
            timer = 0;
            // if just starting flash, go to normal state
            if (flash)
            {
                state = obscureTargetFlash;
            }
            // otherwise go to greek state
            else
            {
                state = obscureTarget;
            }
            break;
        }
        timer += obscureSpd;
        break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw to screen
if (value != '' &amp;&amp; active)
{
    draw_sprite_offset_ext(sprite_index, letterValue(value) + state, x, y,
    sprite_get_width(sprite_index) * 0.5, sprite_get_height(sprite_index) * 0.5,
    image_xscale, image_yscale, image_angle, image_blend, image_alpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// do nothing, draw GUI does the work
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
